
	.global	play_chicken_sfx_flag
	.global	high_score_beaten
	.global	current_ticks_count
	.global	vb_ticks_count
	.global	bg_videoram
	.global	bg_colorram
	.global	sprite_ram_8FF2
	.global	sprite_ram_9022
	.global	vbl_sync_flag
	.global	vbl_sync_counter
	.global	vbl_sync_counter_start_screen
	.global	unknown_87FF
	.global stack_top
	.global	start_level
	.global	diamonds_are_aligned_flag
	.global	quick_maze_draw_flag
	.global no_intermissions_flag
	.global	snobee_chicken_flag
	.global	infinite_lives_flag
	.global	invincible_flag
	.global	diamond_color_cycle_flag
	.ifdef	__amiga__
	
	.ascii	"RAM_STRT"
	.ifndef	RELEASE
	* easier to debug game to have memory aligned on 0x10000 plus 0x8000
	* so addresses MSB match real game
	* (alignment is done on "amiga.68k" end of text section else it doesn't work)
	* wastes up to 80k but worth it when developping the game
	* for instance
	* lea	lives_counter_p1_8814,a0       	| [ld   hl,lives_counter_p1_8814]
    * disassembles in raw WinUAE disassembler to
	* 0011b6ee 41fa d124                lea.l (pc,$d124) == $00118814,a0 ($8814 LSW matches!)
	*

	ds.b	0x8000-2		| for some reason, there's a 2 byte shift, let's make up for it
	.endif
	.else
	* Neogeo: needs different writable section from ROM code
    .bss
	.endif

	.align	2


bg_videoram:
CHARACTER_RAM:						| $8000
	ds.b	0x400
bg_colorram:
ATTRIBUTE_RAM:						| $8400
	ds.b	0x400
	
*VARIABLES_START:
	* this file is generated by the script which extracts the variables
	* from the reversed Z80 code
	.include	"pengo_game_ram.68k"
*VARIABLES_END:

	.align	2
	
	

	ds.b	2
sprite_ram_8FF2:
	ds.b	6*2

	ds.b	2
sprite_ram_9022:
	ds.b	6*2
vbl_sync_counter_start_screen:
	.word	0
high_score_beaten:
	.word	0
stack_top:
	.long	0
invincible_flag:
	.byte	0
infinite_lives_flag:
	.byte	0
diamonds_are_aligned_flag:
	.byte	0
quick_maze_draw_flag:
	.byte	0
no_intermissions_flag:
	.byte	0
snobee_chicken_flag:
	.byte	0
play_chicken_sfx_flag:
	.byte	0
vb_ticks_count:
	.byte	0
current_ticks_count:
	.byte	0
vbl_sync_flag:
	.byte	0
vbl_sync_counter:
	.byte	0
unknown_87FF:
	.byte	0
diamond_color_cycle_flag:
	.byte	0
start_level:
	.byte	0
	.ascii	"RAM_END!"
