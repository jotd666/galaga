- top of screen bobs are not erased. only happens when enemies pass from bottom to top
- when "perfect" music ends, play "attack" sound: to test
- default DSW are wrong
- hit miss ratio can be wrong: 386/585 => 0.4%!!
- high score entry seems buggy!
- understand when l_2681_end_of_table reached, ILLEGAL remaining
- optimize: player ship should be HW sprite, even if captured
  sprite layout: 2 slots for player ship
                 2 slots for captured ship (1 wasted)
				 2 slots for background stars (1 wasted, maybe 2 spare colors will be useful)
				 2 spare slots (maybe their 3 spare colors will be useful)
- HW sprites seem not to work but is the code aligned with .py (orientations/flip/mirror) ?

- tiles on last row can have different CLUTs and cannot be handled by dynamic colors
  generate subset of tiles (only used in last row anyway) and try to match colors with
  sprites colors else not a problem we have a few 16-31 colors left from unused sprites (5 max)
   tiles $36->$4D (included)
- generate proper HW sprite cluts
- make stars scroll configurable, make 30 fps / 60 fps, enable fmode=3 on AGA
- red flashes (frame drop) even with very few sprites with cycle exact!!
  (why are we flashing red when only ship and double shot (single shot?) are displayed!
- redraw bottom tiles all the time or maybe only if some sprite Y > some value
- missing/wrong sounds:
  * swarm sound (when) => after ship capture, at another time???
  * missing tunes
  * extra life (but again, score doesn't work)
  * last moths attack again when on bottom of screen, but no sound is played
- namco logo should be red
- double buffering: don't double buffer last plane for tiles
- double shot should optimize height
- demo: disable invincible flag
- implement level skip trainer

maybe already fixed:

- enemies definitely stop shooting after a few levels: check
  sub at 0D66 is it called?


traj issues: Traj computed in subcpu D23 / D50 probe there!

l_2ADA_done: all bugs arrived: phase 2 diving attacks!


mutants:

f_clone_attack_manager_1A80:
* check parameter for condition to enable the bonus-bee feature.
$1A80: ld   a,(ds_new_stage_parms_99c0 + 0x0A) bonus-bee when bug count reaches thi
$1A83: ld   c,a
$1A84: ld   a,(b_bugs_actv_nbr)transients:
$1A87: cp   c
...$260C: ld   b,a sets the loop count ... after first bonus-round
$1A88: ret  nc [...$260D: srl  a
$260F: add  a,#4
$2611: ld   e,a

$1A89: ld   a,(ds_plyr_actv +_b_bbee_tmr)
$1A8C: and  a$2612: call c_1000 randomizer
$1A8D: jr   nz,l_1AD5_in_one_already$2615: ld   l,a
$2616: ld   h,#0
$1A8F: ld   hl,#b_8800 + 0x07 first object of bee group (minus 1)$2618: ld   a,e
$1A92: ld   bc,#20 * 256 + 0xFF 20 of these pests (we don't care about C)$2619: call c_divmod HL=HL/E
$1A95: ld   a,#1 1 == resting$261C: bit  0,b
$261E: jr   z,l_2622
$1A97: inc  l increment to next even offset$2620: set  3,a
$1A98: cpi A-(HL), HL <- HL+1, BC <- BC-1
$1A9A: jr   z,l_1AAB_found_one$2622: ld   h,#>ds_atk_wav_tmp_buf_9100 tmp_buf[ A 
...$2624: ld   l,a
$1A9C: djnz l_1A97

$2625: ld   a,(hl)
$1A9E: ld   hl,#b_8800 + 0x40 - 1 offset into moth group$2626: inc  a
$1AA1: ld   b,#0x10 16 of the vermin$2627: jr   nz,j_2612
$2629: ld   a,b
$1AA3: inc  l increment to next even offset$262A: rlca
$1AA4: cpi$262B: rlc  c
$1AA6: jr   z,l_1AAB_found_one$262D: jr   nc,l_2631
...$262F: or   #0x40
$1AA8: djnz l_1AA3
$1AAA: ret$2631: or   #0x38
$2633: ld   (hl),a
...
$2634: djnz l_2612