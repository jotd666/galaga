make game faster:

- try to get rid of copy to sprite ram or make it faster
- try profiler in MAME again without loops
- clear bobs: if blitter busy, proceed with CPU
- previous bob code = 0: stop trying to clear
- AGA: try fmode=3
- auto-fps adjustment depending on the number of sprites on screen
- report comments of galaga_game_ram.68k to offsets and kill file

minor issues:

- demo: continues after ship is killed, but with wrong actions
- demo: the attract mode still freezes up the machine once the enemy deploys its tractor beam. 
- (c) namco part of letters are cyan
- 5th score entry letters are partially yellow
- DSW skill level?
- double buffering: don't double buffer last plane for tiles
- double shot should optimize height
- autoframeskip: if too many slowdowns, game should switch to fixed stars/30 fps
- capture bottom beam is red because of Namco logo hack?? reset rows doesn't work
- shots & moth kill sounds have cracks on real hardware (but maybe just need recap...)
- c_plyr_initials_entry_hilite_line: one letter is yellow, rest is white/cyan??
- char grid & sprites too high by 8 pixels
  (top status bar is OK, bottom & field chars are not, a mistake at first
  but maybe better for Amiga display after all!

mutants:

f_clone_attack_manager_1A80:
* check parameter for condition to enable the bonus-bee feature.
$1A80: ld   a,(ds_new_stage_parms_99c0 + 0x0A) bonus-bee when bug count reaches thi
$1A83: ld   c,a
$1A84: ld   a,(b_bugs_actv_nbr)transients:
$1A87: cp   c
...$260C: ld   b,a sets the loop count ... after first bonus-round
$1A88: ret  nc [...$260D: srl  a
$260F: add  a,#4
$2611: ld   e,a

$1A89: ld   a,(ds_plyr_actv +_b_bbee_tmr)
$1A8C: and  a$2612: call c_1000 randomizer
$1A8D: jr   nz,l_1AD5_in_one_already$2615: ld   l,a
$2616: ld   h,#0
$1A8F: ld   hl,#b_8800 + 0x07 first object of bee group (minus 1)$2618: ld   a,e
$1A92: ld   bc,#20 * 256 + 0xFF 20 of these pests (we don't care about C)$2619: call c_divmod HL=HL/E
$1A95: ld   a,#1 1 == resting$261C: bit  0,b
$261E: jr   z,l_2622
$1A97: inc  l increment to next even offset$2620: set  3,a
$1A98: cpi A-(HL), HL <- HL+1, BC <- BC-1
$1A9A: jr   z,l_1AAB_found_one$2622: ld   h,#>ds_atk_wav_tmp_buf_9100 tmp_buf[ A 
...$2624: ld   l,a
$1A9C: djnz l_1A97

$2625: ld   a,(hl)
$1A9E: ld   hl,#b_8800 + 0x40 - 1 offset into moth group$2626: inc  a
$1AA1: ld   b,#0x10 16 of the vermin$2627: jr   nz,j_2612
$2629: ld   a,b
$1AA3: inc  l increment to next even offset$262A: rlca
$1AA4: cpi$262B: rlc  c
$1AA6: jr   z,l_1AAB_found_one$262D: jr   nc,l_2631
...$262F: or   #0x40
$1AA8: djnz l_1AA3
$1AAA: ret$2631: or   #0x38
$2633: ld   (hl),a
...
$2634: djnz l_2612